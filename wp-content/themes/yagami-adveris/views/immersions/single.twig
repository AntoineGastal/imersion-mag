{# {% extends 'layout.twig' %} #}

<!doctype html>
<html {{ site.language_attributes }}>
{#
	|
	| Head
	|-------
	#}
	<head>
		{% include '_layouts/_head.twig' %}
		<script src="https://cdnjs.cloudflare.com/ajax/libs/howler/2.2.0/howler.min.js"></script>
		<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
		
		<!-- Require dependencies -->
		<script src="https://unpkg.com/handsfree@6.1.1/dist/handsfree.js"></script>
		<link rel="stylesheet" href="https://unpkg.com/handsfree@6.1.1/dist/handsfree.css">
	</head>
	
	{#
		|
		| Import macros
		|----------------
		#}
		{% import '_macros/global.twig' as global %}
		
		{#
			|
			| Body
			|-------
			#}
			<body class="{{ body_class }}" data-barba="wrapper" >
				<div class="layer-transition"></div>
				<div data-barba="container" data-barba-namespace="immersions" >
					<div style="overflow:scroll !important; overflow-y: scroll;" locomotive-scroll-container>
						
						
						<script>
							
							let config = {
								// Whether Handsfree should automatically start after instantiation
								autostart: false,
								
								debugger: {
									// Where to inject the debugger into
									target: document.body,
									
									// Whether to show or hide the debugger (video feedback)
									enabled: false
								},
								
								// Which models you want to use
								models: {
									head: {
										enabled: true,
										
										// Run this model every x milliseconds (use 0 for every frame)
										throttle: 0
									},
									bodypix: {
										enabled: false,
										
										// Run this model every x milliseconds (use 0 for every frame)
										throttle: 0,
										
										// The inference method to use: ['segmentPerson', 'segmentPersonParts', 'segmentMultiPerson', 'segmentMultiPersonParts']
										method: 'segmentPerson',
										// The method to use to display debugging: ['toMask', 'toColoredPartMask']
										debugMethod: 'toMask',
										// @see https://github.com/tensorflow/tfjs-models/tree/master/body-pix#loading-the-model
										modelConfig: {
											architecture: 'MobileNetV1',
											outputStride: 16,
											multiplier: 0.75,
											quantBytes: 2
										}
									}
								},
								
								// Configs specific to plugins
								plugin: {
									head: {
										pointer: {
											// How many pixels to shift the pointer by
											offset: {
												x: 0,
												y: 500
											},
											
											// A multiplier that determines how sensitive the pointer is
											// .5 is half as sensitive, 2 is twice as much
											speed: {
												x: 0.5,
												y: 0.5
											}
										}
									},
									
									click: {
										// Morphs to watch for and their required confidences
										morphs: {
											// Right smile (pass 0 to disable this)
											0: 0.5,
											// Left smile (pass 0 to disable this)
											1: 0.5
										}
									},
									
									vertScroll: {
										// The multiplier to scroll by. Lower numbers are slower
										scrollSpeed: 0.15,
										// How many pixels from the the edge to scroll
										scrollZone: 100
									}
								},
								
								// Head morph activations
								// @see https://github.com/handsfree.js/handsfree/wiki/Head
								head: {
									morphs: {
										threshold: {
											smileRight: 0.7,
											smileLeft: 0.7,
											browLeftDown: 0.8,
											browRightDown: 0.8,
											browLeftUp: 0.8,
											browRightUp: 0.8,
											eyeLeftClosed: 0.4,
											eyeRightClosed: 0.4,
											mouthOpen: 0.3,
											mouthRound: 0.8,
											upperLip: 0.5
										}
									}
								}
							}
							
							const handsfree = new Handsfree(config)
							
							
							
							
							// Start tracking
							handsfree.start()
						</script>
						
						
						{% block content %}
						<section class="" style"text-align:center;">
							<div style="background-image: url('{{ post.thumbnail.src }}');background-size: cover;background-position: center; width:5000px; height:1500px; margin:0 auto;border: solid 5px yellow;"></div>
							<div id="open" style="background-color:blue;position:fixed;top:0px;z-index:1000;width:40px;height:40px;text-align:center;cursor:pointer;"> + </div>
						</section>
						<section>
							<div class="container p-md" id="immersion-info" style="height:0px;position:fixed;bottom:0px;width:100%;">
								<hr/>
								<h1>{{ post.title }}</h1>
								<div>{{ post.content }}</div>
								<p>{{ post.date }}</p>
								<hr/>
							</div>
						</section>
						{% endblock %}
						
						<script>
							var sound = new Howl({
								src: [url('http://imersiv.adveris.fr/wp-content/themes/yagami-adveris/web/src/img/global/1.mp3')],
								html5: true, // A live stream can only be played through HTML5 Audio.
								format: ['mp3', 'aac']
							});
							sound.play();
							console.log('Sound play ok!');
							
							document.body.style.overflow = "scroll";
							console.log('style body ok');
							
							// Launch voice recognition    
							$("#open").on('click', () => {
								console.log('clic open');        
								var tlopen = new TimelineLite();
								tlopen.to("#immersion-info", 0, {height: "300"});
								$("#immersion-info").toggle();
							});
						</script>
						
					</div>
				</div>
				
				{#
					|
					| Debug Tool
					|------------
					#}
					{% if debug %}
					{% include '_debug-tool/debug-tool.twig' %}
					{% endif %}
					
					
					{#
						|
						| Javascripts
						|--------------
						#}
						{% block javascripts %}
						<script src="{{ dist }}/js/app.js"></script>
						
						{% if debug %}
						<script src="{{ dist }}/js/debug_tool.js"></script>
						{% endif %}
						{% endblock %}
						
						{#
							|
							| WP Footer
							|--------------
							#}
							{{ wp_footer }}
							
							
							
							
						</body>
						</html>
						